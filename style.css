body {
	width: 100%;
	height: 100%;
	display: block;
	margin: 0;
}

.half_page {
	height: 50%;
	width: 100%;
}

/* only use this method to set an image's source will be CHANGING */
.kitten {content: url("images/kitten-large.png");}


.loaf {}


@media only screen and (max-width: 900px) {
	body{ background-color: green; }
}
@media only screen and (max-width: 660px) {
	.kitten{content: url("images/kitten-medium.png");}
}
@media only screen and (max-width: 450px) {
	body{ background-color: grey;}
	.kitten{}
	.loaf{content: url("images/kitten-small.png");}
}
@media only screen and (max-width: 350px) {
	.kitten{content: url("images/kittyloaf.gif");}
	.loaf {content: url("images/kittyloaf.gif");}
}
@media only screen and (max-width: 300px) {
	.top{background-color: #ffb3ff;}
}
@media only screen and (max-width: 250px) {
	.top{background-color: grey;}
	.bottom{background-color: #ffb3ff;}
}
@media only screen and (max-width: 200px) {
	.top{background-color: #ffb3ff;}
	body{background-color: #ffb3ff;}
}
/* Use this class on the PARENT of the <img> you are trying to center */
/* REMEMBER: the PARENT element tells the CHILD element(s) what to do! */
/* NOTE: Centering images in DIVs only works when the display property is "flex"! */
.center-img {
	display: flex;
	align-items: center;
	justify-content: center;
}

/* Use this class on any <img> you want to prevent from overflowing it's parent <div>! */
.contain-img {
	max-height: 99%;
	max-width: 99%;
}